// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageProto.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from MessageProto.proto</summary>
public static partial class MessageProtoReflection {

  #region Descriptor
  /// <summary>File descriptor for MessageProto.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static MessageProtoReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChJNZXNzYWdlUHJvdG8ucHJvdG8iXAoGSGVhZGVyEg8KB2NyY0NvZGUYASAB",
          "KAUSDgoGbGVuZ3RoGAIgASgFEhEKCXNlc3Npb25JRBgDIAEoAxIMCgR0eXBl",
          "GAQgASgFEhAKCHByaW9yaXR5GAUgASgFImAKBEJvZHkSDAoEY29kZRgBIAEo",
          "BRIdCgRtYXBzGAIgAygLMg8uQm9keS5NYXBzRW50cnkaKwoJTWFwc0VudHJ5",
          "EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEiNwoHTWVzc2FnZRIX",
          "CgZoZWFkZXIYASABKAsyBy5IZWFkZXISEwoEYm9keRgCIAEoCzIFLkJvZHlC",
          "E0IRZGF0YS9NZXNzYWdlUHJvdG9iBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::Header), global::Header.Parser, new[]{ "CrcCode", "Length", "SessionID", "Type", "Priority" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Body), global::Body.Parser, new[]{ "Code", "Maps" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::Message), global::Message.Parser, new[]{ "Header", "Body" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
/// 消息头
/// </summary>
public sealed partial class Header : pb::IMessage<Header> {
  private static readonly pb::MessageParser<Header> _parser = new pb::MessageParser<Header>(() => new Header());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Header> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MessageProtoReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Header() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Header(Header other) : this() {
    crcCode_ = other.crcCode_;
    length_ = other.length_;
    sessionID_ = other.sessionID_;
    type_ = other.type_;
    priority_ = other.priority_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Header Clone() {
    return new Header(this);
  }

  /// <summary>Field number for the "crcCode" field.</summary>
  public const int CrcCodeFieldNumber = 1;
  private int crcCode_;
  /// <summary>
  ///消息校验码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CrcCode {
    get { return crcCode_; }
    set {
      crcCode_ = value;
    }
  }

  /// <summary>Field number for the "length" field.</summary>
  public const int LengthFieldNumber = 2;
  private int length_;
  /// <summary>
  ///消息体长度
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Length {
    get { return length_; }
    set {
      length_ = value;
    }
  }

  /// <summary>Field number for the "sessionID" field.</summary>
  public const int SessionIDFieldNumber = 3;
  private long sessionID_;
  /// <summary>
  ///集群节点全局唯一, 由回话ID生成器生成
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long SessionID {
    get { return sessionID_; }
    set {
      sessionID_ = value;
    }
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 4;
  private int type_;
  /// <summary>
  ///消息类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "priority" field.</summary>
  public const int PriorityFieldNumber = 5;
  private int priority_;
  /// <summary>
  ///消息优先级别
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Priority {
    get { return priority_; }
    set {
      priority_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Header);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Header other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CrcCode != other.CrcCode) return false;
    if (Length != other.Length) return false;
    if (SessionID != other.SessionID) return false;
    if (Type != other.Type) return false;
    if (Priority != other.Priority) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CrcCode != 0) hash ^= CrcCode.GetHashCode();
    if (Length != 0) hash ^= Length.GetHashCode();
    if (SessionID != 0L) hash ^= SessionID.GetHashCode();
    if (Type != 0) hash ^= Type.GetHashCode();
    if (Priority != 0) hash ^= Priority.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CrcCode != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(CrcCode);
    }
    if (Length != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Length);
    }
    if (SessionID != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(SessionID);
    }
    if (Type != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Type);
    }
    if (Priority != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(Priority);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CrcCode != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CrcCode);
    }
    if (Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Length);
    }
    if (SessionID != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(SessionID);
    }
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
    }
    if (Priority != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Priority);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Header other) {
    if (other == null) {
      return;
    }
    if (other.CrcCode != 0) {
      CrcCode = other.CrcCode;
    }
    if (other.Length != 0) {
      Length = other.Length;
    }
    if (other.SessionID != 0L) {
      SessionID = other.SessionID;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    if (other.Priority != 0) {
      Priority = other.Priority;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CrcCode = input.ReadInt32();
          break;
        }
        case 16: {
          Length = input.ReadInt32();
          break;
        }
        case 24: {
          SessionID = input.ReadInt64();
          break;
        }
        case 32: {
          Type = input.ReadInt32();
          break;
        }
        case 40: {
          Priority = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 消息体
/// </summary>
public sealed partial class Body : pb::IMessage<Body> {
  private static readonly pb::MessageParser<Body> _parser = new pb::MessageParser<Body>(() => new Body());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Body> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MessageProtoReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Body() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Body(Body other) : this() {
    code_ = other.code_;
    maps_ = other.maps_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Body Clone() {
    return new Body(this);
  }

  /// <summary>Field number for the "code" field.</summary>
  public const int CodeFieldNumber = 1;
  private int code_;
  /// <summary>
  ///请求的指令编码/响应码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Code {
    get { return code_; }
    set {
      code_ = value;
    }
  }

  /// <summary>Field number for the "maps" field.</summary>
  public const int MapsFieldNumber = 2;
  private static readonly pbc::MapField<string, string>.Codec _map_maps_codec
      = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 18);
  private readonly pbc::MapField<string, string> maps_ = new pbc::MapField<string, string>();
  /// <summary>
  ///消息内容key-value
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<string, string> Maps {
    get { return maps_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Body);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Body other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Code != other.Code) return false;
    if (!Maps.Equals(other.Maps)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Code != 0) hash ^= Code.GetHashCode();
    hash ^= Maps.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Code != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Code);
    }
    maps_.WriteTo(output, _map_maps_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Code != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
    }
    size += maps_.CalculateSize(_map_maps_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Body other) {
    if (other == null) {
      return;
    }
    if (other.Code != 0) {
      Code = other.Code;
    }
    maps_.Add(other.maps_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Code = input.ReadInt32();
          break;
        }
        case 18: {
          maps_.AddEntriesFrom(input, _map_maps_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 消息
/// </summary>
public sealed partial class Message : pb::IMessage<Message> {
  private static readonly pb::MessageParser<Message> _parser = new pb::MessageParser<Message>(() => new Message());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Message> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MessageProtoReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Message() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Message(Message other) : this() {
    Header = other.header_ != null ? other.Header.Clone() : null;
    Body = other.body_ != null ? other.Body.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Message Clone() {
    return new Message(this);
  }

  /// <summary>Field number for the "header" field.</summary>
  public const int HeaderFieldNumber = 1;
  private global::Header header_;
  /// <summary>
  /// 消息头
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Header Header {
    get { return header_; }
    set {
      header_ = value;
    }
  }

  /// <summary>Field number for the "body" field.</summary>
  public const int BodyFieldNumber = 2;
  private global::Body body_;
  /// <summary>
  /// 消息体
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Body Body {
    get { return body_; }
    set {
      body_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Message);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Message other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Header, other.Header)) return false;
    if (!object.Equals(Body, other.Body)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (header_ != null) hash ^= Header.GetHashCode();
    if (body_ != null) hash ^= Body.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (header_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Header);
    }
    if (body_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Body);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (header_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
    }
    if (body_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Body);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Message other) {
    if (other == null) {
      return;
    }
    if (other.header_ != null) {
      if (header_ == null) {
        header_ = new global::Header();
      }
      Header.MergeFrom(other.Header);
    }
    if (other.body_ != null) {
      if (body_ == null) {
        body_ = new global::Body();
      }
      Body.MergeFrom(other.Body);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (header_ == null) {
            header_ = new global::Header();
          }
          input.ReadMessage(header_);
          break;
        }
        case 18: {
          if (body_ == null) {
            body_ = new global::Body();
          }
          input.ReadMessage(body_);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
